h1.docs-page-title Buttons

section.docs-section
  a[href="#basics"]
    h2#basics Basics

  markdown:
    You can add _button_ style to any element by adding the class `btn`.  

  .row:.col:pre.code-sample-static.language-markup:code
    = render_source 'interfaces/templates/button'


section.docs-section
  a[href="#modifiers"]
    h2#modifiers Modifiers

  markdown:
    Modifiers can be used, in addition to `btn`, to _specialize_ your the generic button.  

    Modifiers are _additive_, so you must also provide the base `btn` class.  

  .row:.col:pre.code-sample-static.language-markup:code
    = render_source 'interfaces/templates/button_modified'



section.docs-section
  a[href="#styles"]
    h2#styles Styles

  markdown:
    Buttons come with a handful of useful styles to choose from.  Simply add the modifying clann to the defaul `btn` class.  

    _(Note: These button styles will pull from your application stylesheet.  This is so that they always match the host environment.)_  

  .row
    .col.col--two-fifths
      pre.code-sample-static.language-markup:code
        = render_source 'interfaces/templates/button_anchor'

    .col.col--fifth.text-center
      .item-centered-hr
        h4 or

    .col.col--two-fifths
      pre.code-sample-static.language-markup:code
        = render_source 'interfaces/templates/button_input'

  = render 'interfaces/templates/buttons/button_modifier_list', :mustache => button_styles


section.docs-section
  a[href="#disabled"]
    h2#disabled Disabled

  markdown:
    Buttons respond to being programitically disabled.  To disable a button, simply set it's `disabled` attribute to `disabled`.  

  .row:.col:pre.code-sample-static.language-markup:code
    = render_source 'interfaces/templates/button_disabled'

  table.table
    tr
      td
        = render 'interfaces/templates/button_disabled'
      td
        pre: code
          | btn, disabled="disabled"
      td disabled


section.docs-section
  a[href="#outline"]
    h2#outline Outline

  markdown:
    Outlined buttons have borders but no background color. Just add the modifying `.btn--outline` classname to any `.btn`. Except for `.btn--link`, because it doesn't need borders, yo. Color modifiers work too.

  .row:.col:pre.code-sample-static.language-markup:code
    = render_source 'interfaces/templates/button_outline'

  = render 'interfaces/templates/buttons/button_outline_modifier_list',
            :mustache => { button_modifiers: [{ modifier: '', description: "default outline" }, { modifier: 'btn--danger', description: "outlined btn--danger" }] }


section.docs-section
  a[href="#size"]
    h2#size Size

  markdown:
    Add the size modifier class to `.btn`.

  = render 'interfaces/templates/buttons/button_modifier_list', :mustache => { button_modifiers: [{ modifier: 'btn--large' }, { modifier: '' }, { modifier: 'btn--small' }, { modifier: 'btn--tiny' }, { modifier: 'btn--micro' }, { modifier: 'btn--expand' }] }


section.docs-section
  a[href="#group"]
    h2#group Groups

  markdown:
    Button groups allow you to cobine related buttons into a single interface element. Modifier classes work too. (Just make sure your sizes are consistent, cause otherwise, ewww.)

  .row:.col
    = render 'interfaces/templates/buttons/button_group', :mustache => { first: "one", second: "two", third: "three" }

  .row:.col:pre.code-sample-static.language-markup:code
    = render_source 'interfaces/templates/buttons/button_group'


section.docs-section
  a[href="#group-checkbox"]
    h2#group-checkbox Group Checkbox

  markdown:
    In some cases, you want a checkbox to not look like a checkbox. You want it to look like a button with a checked and unchecked state.  Here.
    Modifiers can be applied.

    *You'll need the js in place for adding a `selected` class to the `label` element.*

  .row:.col
    = render 'interfaces/templates/buttons/button_group_checkboxes', :mustache => { first: "crazy", second: "sexy", third: "cool" }

  .row:.col:pre.code-sample-static.language-markup:code
    = render_source 'interfaces/templates/buttons/button_group_checkboxes'
