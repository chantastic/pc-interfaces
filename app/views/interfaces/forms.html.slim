h1.docs-page-title Forms
markdown:
  Marking up form elements is very straightforward. No special classnames needed. All `input`, `select`, and `textarea` elements are globally styled at 100% wide.

section.docs-section
  a[href="#text-inputs"]
    h2#text-inputs Text Inputs

  .row:.col:pre.code-sample-static.language-markup:code
    = render_source 'interfaces/templates/input_text'

  form
    .row
      .col
        = render 'interfaces/templates/input_text',
                  :mustache => { label: 'A text input', placeholder: 'Put something here...' }

section.docs-section
  a[href="#layout"]
    h2#layout Layout
  markdown:
    For laying out your forms, use the [grid](/styleguide/grids/) to wrap your elements.

  .row:.col:pre.code-sample-static.language-markup:code

    = render_source 'interfaces/templates/input_text_layout'

  form
    .row
      .col.col--half
        = render 'interfaces/templates/input_text',
              :mustache => { label: 'A text input', placeholder: 'Put something here...' }
      .col.col--half
        = render 'interfaces/templates/input_text',
              :mustache => { label: 'A text input', placeholder: 'Put something here...' }
    .row
      .col
        = render 'interfaces/templates/input_textarea',
                  :mustache => { label: 'Lots to say?', placeholder: 'Tell us about it...' }

section.docs-section
  a[href="#select-inputs"]
    h2#selects Selects Inputs

  ruby:
    select_options = [
      { val: "capicola",   text: "Capicola"   },
      { val: "proscuitto", text: "Prosciutto" },
      { val: "kielbasa",   text: "Kielbasa"   },
      { val: "salami",     text: "Salami"     }
    ]

  form
    .row
      .col.col--half
        markdown:
          #### Select2 Box
          Just use a `select` tag.
        .row:.col:pre.code-sample-static.language-markup:code
          = render_source 'interfaces/templates/input_select'
        = render 'interfaces/templates/input_select',
                  :mustache => { label: 'Select2 Box', select_data: select_options }
      .col.col--half
        markdown:
          #### Select2 Box With No Search Bar
          Add the `select2--nosearch` class to the tag.
        .row:.col:pre.code-sample-static.language-markup:code
          = render_source 'interfaces/templates/input_select_modified'
        = render 'interfaces/templates/input_select_modified',
                  :mustache => { label: 'Select2 Box No Search Input', select_data: select_options }
    .row
      .col
        markdown:
          #### Select2 With Multi Select
          No class needed. Just add the `multiple` attribute.
        .row:.col:pre.code-sample-static.language-markup:code
          = render_source 'interfaces/templates/input_select_multiple'
        = render 'interfaces/templates/input_select_multiple',
                  :mustache => { label: 'Select2 Multi Select', select_data: select_options }

section.docs-section
  a[href="#custom-checkboxes"]
    h2#selects Custom Checkboxes

  .row
    .col
      .row:.col:pre.code-sample-static.language-markup:code
        = render_source 'interfaces/templates/input_custom_checkbox'
  .row
    .col
      = render 'interfaces/templates/input_custom_checkbox'

section.docs-section
  markdown:
    **TODO**

    * checkbox group (extract from buttons)
