h1.docs-page-title The Grid. A Digital Frontier.

section.docs-section
  markdown:
    {: .demo-list}
    - Use a `row` to create a horizontal group of columns.
    - Content should be placed within columns, and only columns may be immediate children of rows.
    - Columns create gutters via padding. That padding is offset in rows for the first and last column via negative margin on `row` s.

  ruby:
    col_full = {
      column: '<div class="grid-demo">I\'m a full-width column.</div>'
    }
  = render 'interfaces/templates/grids_full', :mustache => col_full

  pre.code-sample-static.language-markup:code
    = render_source 'interfaces/templates/grids_full'

section.docs-section
  h3 For more options with column widths, add modifiers.

  ruby:
    grid_modifiers = {
      grid_modified_list: [
        { description: '100% wide (default)' },
        { modifier: 'col--half', description: '50% wide' },
        { modifier: 'col--third',  description: '33% wide' },
        { modifier: 'col--two-thirds', description: '66.6% wide' },
        { modifier: 'col--quarter', description: '25% wide' },
        { modifier: 'col--three-quarters', description: '75% wide' },
        { modifier: 'col--fifth', description: '20% wide' },
        { modifier: 'col--two-fifths', description: '40% wide' },
        { modifier: 'col--three-fifths', description: '60% wide' },
        { modifier: 'col--four-fifths', description: '80% wide' }
      ]
    }

  = render 'interfaces/templates/grids/grid_modified_list', :mustache => grid_modifiers

section.docs-section

  ruby:
    multi_cols = {
      col_half: '
        <!-- your content goes here -->
        <div class="grid-demo">
          <code>col col--half</code>
        </div>
      ',
      col_third: '
        <!-- your content goes here -->
        <div class="grid-demo">
          <code>col col--third</code>
        </div>
      '
    }


  = render 'interfaces/templates/grids_multi_cols', :mustache => multi_cols
  pre.code-sample-static.language-markup:code
    = render_source 'interfaces/templates/grids_multi_cols'

section.docs-section.clearfix
  markdown:
    ### Breakpoint Overrides for various screen sizes

    The grid is responsive, mobile-first. Therefore, all `col` and `col--` classes will be full-width and stacked on screen widths less than 600px. You can, however, use breakpoint-specific classnames to control grid elements differently, based on the device width. Just add the modifiers, like so:

  ruby:
    breakpoint_overrides = {
      override_1: '
        <!-- your content goes here -->
        <div class="grid-demo">
          I\'m full-width on mobile, half-width on tablets, and a third on everything else.
        </div>
      ',
      override_2: '
        <!-- your content goes here -->
        <div class="grid-demo">
          I\'m full-width on mobile, half-width on tablets, and a two-thirds on everything else.
        </div>
      '
    }

  = render 'interfaces/templates/grids_breakpoint_overrides', :mustache => breakpoint_overrides
  pre.code-sample-static.language-markup:code
    = render_source 'interfaces/templates/grids_breakpoint_overrides'

  markdown:
    _*Don't forget: all `cols`s in a `row` still need to equal 100% width or less. If you try to do a half col and a three-quarter col, it's not going to work the way you want._

  ruby:
    palm_overrides = {
      grid_modified_list: [
        { modifier: 'palm--half' },
        { modifier: 'palm--third' },
        { modifier: 'palm--two-thirds' },
        { modifier: 'palm--quarter' },
        { modifier: 'palm--three-quarters' }
      ]
    }

    tablet_overrides = {
      grid_modified_list: [
        { modifier: 'tab--half' },
        { modifier: 'tab--third' },
        { modifier: 'tab--two-thirds' },
        { modifier: 'tab--quarter' },
        { modifier: 'tab--three-quarters' },
        { modifier: 'tab--fifth' },
        { modifier: 'tab--two-fifths' },
        { modifier: 'tab--three-fifths' },
        { modifier: 'tab--four-fifths' }
      ]
    }

    desktop_overrides = {
      grid_modified_list: [
        { modifier: 'desk--half' },
        { modifier: 'desk--third' },
        { modifier: 'desk--two-thirds' },
        { modifier: 'desk--quarter' },
        { modifier: 'desk--three-quarters' }
      ]
    }

  .col.col--third.tab--full
    h4 Mobile Overrides
    p
      code.language-css
        | @media (max-width: 37.5em)
    = render 'interfaces/templates/grids/grid_modified_list', :mustache => palm_overrides

  .col.col--third.tab--full
    h4 Tablet Overrides
    p
      code.language-css
        | @media (min-width: 37.5em)
      br
      code.language-css
        | and (max-width: 64em)
    = render 'interfaces/templates/grids/grid_modified_list', :mustache => tablet_overrides

  .col.col--third.tab--full
    h4 Desktop Overrides
    p
      code.language-css
        | @media (min-width: 64em)
    = render 'interfaces/templates/grids/grid_modified_list', :mustache => desktop_overrides
